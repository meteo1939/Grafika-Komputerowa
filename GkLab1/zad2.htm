<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<title>Lab 2</title>
<style>
        body {
            background-color: #DDDDDD;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }
        canvas {
            background-color: white;
            display: block;
        }
        #canvasholder {
            border: 2px solid black;
            float: left;
        }
</style>
<script>
        "use strict";
 
        var canvas;
        var graphics;
 
        // Funkcja do generowania losowego koloru RGB
        function randomColorString() {
            var r = Math.floor(256 * Math.random());
            var g = Math.floor(256 * Math.random());
            var b = Math.floor(256 * Math.random());
            return "rgb(" + r + "," + g + "," + b + ")";
        }
 
        // Funkcja do czyszczenia canvasu
        function doClear() {
            graphics.clearRect(0, 0, canvas.width, canvas.height); // Czyści cały obszar canvasu
        }
 
        // Funkcja do obsługi myszy: rysowanie kształtów
        function installMouseHandler() {
            var dragging = false;
            var startX, startY;
            var prevX, prevY;
            var colorChoice;
 
            function doMouseDown(evt) {
                if (dragging) return;
                if (evt.button != 0) return;
                var x, y;
                var r = canvas.getBoundingClientRect();
                x = Math.round(evt.clientX - r.left);
                y = Math.round(evt.clientY - r.top);
                dragging = true;
                if (dragging) {
                    startX = prevX = x;
                    startY = prevY = y;
                    document.addEventListener("mousemove", doMouseMove, false);
                    document.addEventListener("mouseup", doMouseUp, false);
                }
                colorChoice = Number(document.getElementById("colorChoice").value);
            }
 
            function doMouseMove(evt) {
                if (!dragging) return;
                var x, y;
                var r = canvas.getBoundingClientRect();
                x = Math.round(evt.clientX - r.left);
                y = Math.round(evt.clientY - r.top);
 
                if (Math.abs(x - prevX) + Math.abs(y - prevY) < 3) {
                    return;
                }
 
                // Obsługa koloru
                if (colorChoice == 0) {
                    graphics.fillStyle = randomColorString();
                } else if (colorChoice == 1) {
                    graphics.fillStyle = "red";
                } else if (colorChoice == 2) {
                    graphics.fillStyle = "green";
                } else if (colorChoice == 3) {
                    graphics.fillStyle = "blue";
                } else if (colorChoice == 4) {
                    graphics.fillStyle = "purple";
                }
 
                // Obsługa kształtu
                var shapeChoice = Number(document.getElementById("shapeChoice").value);
                if (shapeChoice == 0) {
                    // Rysowanie prostokąta
                    graphics.fillRect(x - 20, y - 20, 40, 40);
                    graphics.strokeRect(x - 20, y - 20, 40, 40);
                } else if (shapeChoice == 1) {
                    // Rysowanie pięciokąta
                    drawPolygon(graphics, x, y, 5, 20);
                }
 
                prevX = x;
                prevY = y;
            }
 
            function doMouseUp(evt) {
                if (!dragging) return;
                dragging = false;
                document.removeEventListener("mousemove", doMouseMove, false);
                document.removeEventListener("mouseup", doMouseUp, false);
            }
 
            canvas.addEventListener("mousedown", doMouseDown, false);
        }
 
        // Funkcja do rysowania pięciokąta
        function drawPolygon(context, x, y, sides, radius) {
            context.beginPath();
            var angle = (2 * Math.PI) / sides;
            for (var i = 0; i < sides; i++) {
                var currX = x + radius * Math.cos(i * angle);
                var currY = y + radius * Math.sin(i * angle);
                if (i === 0) {
                    context.moveTo(currX, currY);
                } else {
                    context.lineTo(currX, currY);
                }
            }
            context.closePath();
            context.fill();
            context.stroke();
        }
 
        // Inicjalizacja canvasu i ustawienia początkowe
        function init() {
            try {
                canvas = document.getElementById("canvas");
                graphics = canvas.getContext("2d");
            } catch (e) {
                document.getElementById("canvasholder").innerHTML =
                    "<p>Canvas graphics is not supported.<br>" +
                    "An error occurred while initializing graphics.</p>";
                return;
            }
 
            installMouseHandler();
            graphics.fillStyle = "white";
            graphics.fillRect(0, 0, canvas.width, canvas.height);
 
            // Przypisanie funkcji czyszczenia do przycisku
            document.getElementById("clearButton").onclick = doClear;
        }
 
        window.onload = init;
</script>
</head>
<body>
<h2>Lab 2</h2>
 
    <noscript>
<p>JavaScript is required to use this page.</p>
</noscript>
 
    <p><b>Color:</b>
<select id="colorChoice">
<option value="0" selected="selected">Random</option>
<option value="1">Red</option>
<option value="2">Green</option>
<option value="3">Blue</option>
<option value="4">Purple</option>
</select>
</p>
 
    <p><b>Shape:</b>
<select id="shapeChoice">
<option value="0" selected="selected">Rectangle</option>
<option value="1">Pentagon</option>
</select>
</p>
 
    <button id="clearButton">Clear</button>
 
    <div id="canvasholder">
<canvas id="canvas" width="800" height="600">
            Canvas not supported.
</canvas>
</div>
 
</body>
</html>
 